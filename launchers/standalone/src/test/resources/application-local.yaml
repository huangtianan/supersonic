server:
  port: 9080
  compression:
    enabled: true
    min-response-size: 1024
    mime-types: application/javascript,application/json,application/xml,text/html,text/xml,text/plain,text/css,image/*

spring:
  h2:
    console:
      path: /h2-console/semantic
      enabled: true
  datasource:
    driver-class-name: org.h2.Driver
    schema: classpath:db/schema-h2.sql
    data: classpath:db/data-h2.sql
    url: jdbc:h2:mem:semantic;DATABASE_TO_UPPER=false
    username: root
    password: semantic

mybatis:
  mapper-locations=classpath:mappers/custom/*.xml,classpath*:/mappers/*.xml

authentication:
  enable: true
  exclude:
    path: /api/auth/user/register,/api/auth/user/login
  token:
    http:
      header:
        key: Authorization

logging:
  level:
    dev.langchain4j: DEBUG
    dev.ai4j.openai4j: DEBUG

s2:
  parser:
    strategy: ONE_PASS_AUTO_COT_SELF_CONSISTENCY
    exemplar-recall:
      number: 5
    few-shot:
      number: 1
    self-consistency:
      number: 1
    multi-turn:
      enable: false

  corrector:
    additional:
      information: true

  demo:
    names: S2VisitsDemo,S2ArtistDemo
    enableLLM: false

  schema:
    cache:
      enable: false

  langchain4j:
    #1.chat-model
    chat-model:
      provider: open_ai
      openai:
        # Replace with your LLM configs
        # Note: The default API key `demo` is provided by langchain4j community
        #       which limits 1000 tokens per request.
        base-url: ${OPENAI_API_BASE:https://api.openai.com/v1}
        api-key: ${OPENAI_API_KEY:demo}
        model-name: ${OPENAI_MODEL_NAME:gpt-3.5-turbo}
        temperature: ${OPENAI_TEMPERATURE:0.0}
        timeout: ${OPENAI_TIMEOUT:PT60S}
    #2.embedding-model
    #2.1 in_memory(default)
    embedding-model:
      provider: in_process